@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rmlt: <http://semweb.mmlab.be/ns/rml-target#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix comp: <http://semweb.mmlab.be/ns/rml-compression#> .
@prefix formats: <http://www.w3.org/ns/formats/> .
@prefix w3: <http://www.w3.org/ns/locn#> .
@prefix gbfs: <https://w3id.org/gbfs#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix td: <https://www.w3.org/2019/wot/td#> .
@prefix htv: <http://www.w3.org/2011/http#> .
@prefix hctl: <https://www.w3.org/2019/wot/hypermedia#> .
@prefix schema: <http://schema.org/> .
@prefix mobivoc: <http://schema.mobivoc.org/#> .
@prefix gtfs: <http://vocab.gtfs.org/terms#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix elements: <http://purl.org/dc/elements/1.1/> .
@prefix tree: <https://w3id.org/tree#> .
@prefix ldes: <https://w3id.org/ldes#> .
@prefix idlab: <http://example.com/idlab/function/> .
@prefix hubs: <https://purl.eu/ns/mobility/passenger-transport-hubs#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix opengis: <http://www.opengis.net/ont/geosparql#> .
@prefix dienst: <https://purl.eu/ns/mobility/passenger-transport-hubs#Mobiliteitsdienst.> .

@prefix prov:  <http://www.w3.org/ns/prov#> .
@prefix carml: <http://carml.taxonic.com/carml/> .
@prefix temp:  <https://temporary.org/> .

  # Member mappings
_:ResourceReport a rr:TriplesMap;
  rml:logicalSource [
    a rml:LogicalSource;
    rml:source [a carml:Stream];
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.*";
  ];

  # hubs:ResourceReport
  rr:subjectMap [
    rr:termType rr:IRI;
    rr:template "https://blue-bike.be/resourcereports/{id}#{last_seen}";
    rr:graphMap [ rr:template "https://blue-bike.be/stations/{id}#{last_seen}" ];
  ];

  # rdf:type
  rr:predicateObjectMap [
    rr:predicate rdf:type;
    rr:objectMap [
      rr:constant hubs:ResourceReport;  rr:termType rr:IRI;
    ];
  ];
  # hubs:number
  rr:predicateObjectMap [
    rr:predicate hubs:number;
    rr:objectMap [
      rml:reference "bikes_available"; rr:datatype xsd:integer;
    ];
  ];
  # hubs:service
  rr:predicateObjectMap [
    rr:predicate hubs:service;
    rr:objectMap[
      rr:constant "https://blue-bike.be/#me";  rr:termType rr:IRI;
    ];
  ];
  # elements:date
  rr:predicateObjectMap [
    rr:predicate elements:date;
    rr:objectMap[
      rml:reference "last_seen";
      rr:datatype xsd:dateTime;
    ];
  ];
  # Referene to Vervoermiddel (dienst:vervoermiddel)
  rr:predicateObjectMap[
    rr:predicate dienst:vervoermiddel;
    rr:objectMap [
      rr:termType rr:IRI;
      rr:template "https://blue-bike.be/resourcereports/vervoermiddel/{id}#{last_seen}";
    ];
  ];
  # Reference to Status (hubs:status)
  rr:predicateObjectMap[
    rr:predicate hubs:status;
    rr:objectMap[
      rr:termType rr:IRI;
      rr:template "https://blue-bike.be/resourcereports/status/{id}#{last_seen}";
    ];
  ];
  # Reference to Actuator (hubs:propulsion)
  rr:predicateObjectMap[
    rr:predicate hubs:propulsion;
    rr:objectMap[
      rr:termType rr:IRI;
      rr:template "https://blue-bike.be/resourcereports/actuator/{id}#{last_seen}";
    ];
  ];
  # Reference to Type (dcterms:type)
  rr:predicateObjectMap[
    rr:predicate dcterms:type;
    rr:objectMap[
      rr:termType rr:IRI;
      rr:template "https://blue-bike.be/resourcereports/type/{id}#{last_seen}";
    ];
  ];
  # Reference to Station (hubs:location)
  rr:predicateObjectMap [
    rr:predicate hubs:location;
    rr:objectMap[
      rr:termType rr:IRI;
      rr:template "https://blue-bike.be/stations/{id}#{last_seen}";
    ];
  ];
.

# Stations
_:StationsTriplesMap a rr:TriplesMap;
  rml:logicalSource [ a rml:LogicalSource;
    rml:source [a carml:Stream];
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.*";
  ];
  # Unique IRI generation: $stationId#$generatedAtTime (id#last_seen)
  rr:subjectMap [
    rr:termType rr:IRI;
    rr:template "https://blue-bike.be/stations/{id}#{last_seen}";
    rr:graphMap [ rr:template "https://blue-bike.be/stations/{id}#{last_seen}" ];
  ];
  # rdf:type
  rr:predicateObjectMap [
    rr:predicate rdf:type;
    rr:objectMap [
      rr:constant mobivoc:BicycleParkingStation;
      rr:termType rr:IRI
    ];
  ];
  # schema:name
  rr:predicateObjectMap [
    rr:predicate schema:name ;
    rr:objectMap [ rml:reference "name"; rr:datatype xsd:string; ]
  ];
  # prov:generatedAtTime -- added by rorlic
  rr:predicateObjectMap [
    rr:predicate prov:generatedAtTime ;
    rr:objectMap [ rml:reference "last_seen"; rr:datatype xsd:dateTime; ]
  ];
  # dcterms:isVersionOf
  rr:predicateObjectMap [
    rr:predicate dcterms:isVersionOf ;
    rr:objectMap [
      rr:template "https://blue-bike.be/stations/{id}";
      rr:termType rr:IRI;
    ]
  ];
  # Reference to Capacity (mobivoc:capacity)
  rr:predicateObjectMap[
    rr:predicate mobivoc:capacity;
    rr:objectMap [
      rr:termType rr:IRI;
      rr:template "https://blue-bike.be/stations/capacity/{id}#{last_seen}";
    ];
  ];
  # w3:geometry
  rr:predicateObjectMap[
    rr:predicate w3:geometry;
    rr:objectMap [
      rr:termType rr:IRI;
      rr:template "https://blue-bike.be/stations/geometry/{id}#{last_seen}";
    ];
  ];
.

# Capacities
_:Capacity  a rr:TriplesMap;
  rml:logicalSource [
    a rml:LogicalSource;
    rml:source [a carml:Stream];
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.*";
  ];

  rr:subjectMap [
    rr:termType rr:IRI;
    rr:template "https://blue-bike.be/stations/capacity/{id}#{last_seen}";
    rr:graphMap [ rr:template "https://blue-bike.be/stations/{id}#{last_seen}" ];
  ];

  # rdf:type
  rr:predicateObjectMap[
    rr:predicate rdf:type;
    rr:objectMap [rr:constant mobivoc:Capacity; rr:termType rr:IRI;];
  ];
#
# NOTE: we cannot calculate mobivoc:totalCapacity here as Carml does not include
#       the GREL functions. Therefore we add the value for bikes_in_use here and
#       we calculate the total capacity and remove the bikes_in_use in SPARQL.
#
#  # Total capacity (mobivoc:totalCapacity) as the sum of bikes_in_use + bikes_available
#  rr:predicateObjectMap[
#    rr:predicate mobivoc:totalCapacity;
#    rr:objectMap[
#      fnml:functionValue [
#        rr:predicateObjectMap [
#            rr:predicate fno:executes ;
#            rr:objectMap [ rr:constant grel:array_sum ]
#        ];
#
#        rr:predicateObjectMap [
#            rr:predicate grel:p_array_a ;
#            rr:objectMap [ rml:reference "bikes_in_use";  rr:datatype xsd:integer;]
#        ];
#
#        rr:predicateObjectMap [
#            rr:predicate grel:p_array_a ;
#            rr:objectMap [ rml:reference "bikes_available"; rr:datatype xsd:integer; ]
#        ];
#      ];
#      rr:datatype xsd:integer;
#    ];
#  ];
  # TEMPORARY add the current occupancy (temp:bikes_in_use).
  rr:predicateObjectMap [
    rr:predicate temp:bikes_in_use ;
    rr:objectMap [ rml:reference "bikes_in_use"; rr:datatype xsd:integer; ]
  ];
  # Current capacity (mobivoc:currentValue). This should be part of a mobivoc:RealTimeCapacity which is not model here.
  rr:predicateObjectMap [
    rr:predicate mobivoc:currentValue ;
    rr:objectMap [ rml:reference "bikes_available"; rr:datatype xsd:integer; ]
  ];
  # Reference to Vehicle Type (hubs:vehicleType)
  rr:predicateObjectMap[
    rr:predicate hubs:vehicleType;
    rr:objectMap [
      rr:termType rr:IRI;
      rr:template "https://blue-bike.be/stations/vehicleType/{id}#{last_seen}";
    ];
  ];
.

# Geometries
_:Geometry a rr:TriplesMap;
  rml:logicalSource [
    a rml:LogicalSource;
    rml:source [a carml:Stream];
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.*";
  ];
  rr:subjectMap [
    rr:termType rr:IRI;
    rr:template "https://blue-bike.be/stations/geometry/{id}#{last_seen}";
    rr:graphMap [ rr:template "https://blue-bike.be/stations/{id}#{last_seen}" ];
  ];

  # rdf:type
  rr:predicateObjectMap[
    rr:predicate rdf:type;
    rr:objectMap[
      rr:constant w3:Geometry ; rr:termType rr:IRI;
    ];
  ];
  # opengis:asWKT
  rr:predicateObjectMap[
    rr:predicate opengis:asWKT;
    rr:objectMap[
      rr:template "POINT({longitude} {latitude})";
      rr:datatype opengis:wktLiteral;
    ];
  ];
.

# Vehicle types
_:VehicleType a rr:TriplesMap;
  rml:logicalSource [
    a rml:LogicalSource;
    rml:source [a carml:Stream];
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.*";
  ];
  rr:subjectMap [
    rr:termType rr:IRI;
    rr:template "https://blue-bike.be/stations/vehicleType/{id}#{last_seen}";
    rr:graphMap [ rr:template "https://blue-bike.be/stations/{id}#{last_seen}" ];
  ];

  # rdf:type
  rr:predicateObjectMap [
    rr:predicate rdf:type;
    rr:objectMap [
      rr:constant skos:Concept; rr:termType rr:IRI;
    ];
  ];
  # skos:prefLabel
  rr:predicateObjectMap[
    rr:predicate skos:prefLabel;
    rr:objectMap [
      rr:constant "bicycle";
      rr:language "en";
    ];
  ];
.

# VervoerMiddel
_:VervoerMiddel a rr:TriplesMap;
  rml:logicalSource [
    a rml:LogicalSource;
    rml:source [a carml:Stream];
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.*";
  ];
  rr:subjectMap [
    rr:termType rr:IRI;
    rr:template "https://blue-bike.be/resourcereports/vervoermiddel/{id}#{last_seen}";
    rr:graphMap [ rr:template "https://blue-bike.be/stations/{id}#{last_seen}" ];
  ];

  # rdf:type
  rr:predicateObjectMap [
    rr:predicate rdf:type;
    rr:objectMap [
      rr:constant skos:Concept; rr:termType rr:IRI;
    ];
  ];
  # skos:prefLabel
  rr:predicateObjectMap[
    rr:predicate skos:prefLabel;
    rr:objectMap [
      rr:constant "bicycle";
      rr:language "en";
    ];
  ];
.

# Status
_:Status a rr:TriplesMap;
  rml:logicalSource [
    a rml:LogicalSource;
    rml:source [a carml:Stream];
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.*";
  ];
  rr:subjectMap [
    rr:termType rr:IRI;
    rr:template "https://blue-bike.be/resourcereports/status/{id}#{last_seen}";
    rr:graphMap [ rr:template "https://blue-bike.be/stations/{id}#{last_seen}" ];
  ];

  # rdf:type
  rr:predicateObjectMap [
    rr:predicate rdf:type;
    rr:objectMap [
      rr:constant skos:Concept; rr:termType rr:IRI;
    ];
  ];
  # skos:prefLabel
  rr:predicateObjectMap[
    rr:predicate skos:prefLabel;
    rr:objectMap [
      rr:constant "available";
      rr:language "en";
    ];
  ];
.

# Actuators
_:Actuator a rr:TriplesMap;
  rml:logicalSource [
    a rml:LogicalSource;
    rml:source [a carml:Stream];
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.*";
  ];
  rr:subjectMap [
    rr:termType rr:IRI;
    rr:template "https://blue-bike.be/resourcereports/actuator/{id}#{last_seen}";
    rr:graphMap [ rr:template "https://blue-bike.be/stations/{id}#{last_seen}" ];
  ];

  # rdf:type
  rr:predicateObjectMap [
    rr:predicate rdf:type;
    rr:objectMap [
      rr:constant skos:Concept; rr:termType rr:IRI;
    ];
  ];
  # skos:prefLabel
  rr:predicateObjectMap[
    rr:predicate skos:prefLabel;
    rr:objectMap [
      rr:constant "human";
      rr:language "en";
    ];
  ];
.

# Types
_:Type a rr:TriplesMap;
  rml:logicalSource [
    a rml:LogicalSource;
    rml:source [a carml:Stream];
    rml:referenceFormulation ql:JSONPath;
    rml:iterator "$.*";
  ];
  rr:subjectMap [
    rr:termType rr:IRI;
    rr:template "https://blue-bike.be/resourcereports/type/{id}#{last_seen}";
    rr:graphMap [ rr:template "https://blue-bike.be/stations/{id}#{last_seen}" ];
  ];

  # rdf:type
  rr:predicateObjectMap [
    rr:predicate rdf:type;
    rr:objectMap [
      rr:constant skos:Concept; rr:termType rr:IRI;
    ];
  ];
  # skos:prefLabel
  rr:predicateObjectMap[
    rr:predicate skos:prefLabel;
    rr:objectMap [
      rr:constant "vehicle";
      rr:language "en";
    ];
  ];
.